
from turtle import delay
import pytest
import time
from serial_helper import Sld2SerialPort1, Sld2SerialPort2
from datetime import datetime


TOWER_PORT = "COM3"
SLD2_PORT = "COM14"
# TOWER_PORT = "/dev/ttyUSB0"
# SLD2_PORT = "/dev/ttyUSB1"
TowerDevice = None
SLD2Device = None

######################## TEST INPUT ########################
FW_VERSION = "Iv001400"
DEFINED_BUFFER_ANS = "Da00"
THREAD_CONTROL_ANS = "Ha00"
ACK_CONTROL_ANS = "Ka06"
MANAGE_BUFFER_ANS = "Fa00"
TOWERS_MASK_ANS = "Ya00"
SLD2_TWEAKING_ANS = "Wa00"
SLD1_TWEAKING_ANS = "Ma00"
SLD2_OK = 0
SLD2_FAIL = -1

METAPREAMBLE = "55930BD11CFB55930BD21CF155930BD39CF455930BD41CE555930BD59CE055930BD69CEA55930BD71CEF55930BD81CCD55930BD99CC855930BDA9CC255930BDB1CC755930BDC9CD655930BDD1CD355930BDE1CD955930BDF9CDC55930BE09C5E55930BE11C5B55930BE21C5155930BE39C5455930BE41C4555930BE59C4055930BE69C4A55930BE71C4F55930BE81C6D55930BE99C6855930BEA9C6255930BEB1C6755930BEC9C7655930BED1C7355930BEE1C7955930BEF9C7C55930BF01C3D55930BF19C3855930BF29C3255930BF31C3755930BF49C2655930BF51C2355930BF61C2955930BF79C2C55930BF89C0E55930BF91C0B55930BFA1C0155930BFB9C0455930BFC1C1555930BFD9C1055930BFE9C1A"

SIP_ID_AA01_01 = "55B09355501C3AE9"

TRANSITION_BYTES = "5555"
NIP_ZERO_MSG = "55D0C9FFE11D14EE"
NIP_THREE_MSGS = "55D0C9FFD11DB4EE"
NIP_ONE_MSG_GROUP2 = "55D0C9EFE11D95AD"
NIP_ONE_MSG_GROUP3 = "55D0C9FBE11D94BD"
NIP_ONE_MSG_GROUP6 = "55D0C9FFF11DF4ED"
NIP_ONE_MSG_GROUP6_NO_SYNC = "558585FFF11DF4ED"
NIP_THREE_MSG_ADJACENT_UNITS = "55D0C9FFB51DECE8"
NIP_TWO_MSG_GROUP3 = "55D0C9F7E11D944D"
NIP_THREE_MSG_GROUP3 = "55D0C9F3E11D141E"
NIP_ONE_MSG_PER_GROUP = "55D0C9AAB4486F11"
NIP_ONE_MSG_GROUP1_2_TWO_MSG_GROUP3 = "55D0C9A7E11D900D"
NIP_ONE_MSG_GROUP1_2_THREE_MSG_GROUP3 = "55D0C9A3E11D105E"



SMP__THREE_MSG_AABB12 = "55C9D0555A0F9DED2F8836EF78788262935797F7"
SMP__ONE_MSG_AABB12 = "55C9D0555A0F9DED5E5E" 
SMP_THREE_MSG_AABB06 = "55C9D0555A1B9CED2F8822EF78788276935710F0"
SMP_ACK_REPORT_MSG_AABB03 = "55C9D0555A1E9CED2F8827EE78F5A5"
SMP_SLEEP_REPORT_MSG_AABB03 = "552C9D0555A1E9DED2F8827EE7874B6"
SMP_SLEEP_REPORT_CHECKPOINT_MSG_AABB03 = "552C9D0555A1E9DED2F8827EE787882739255864E"


SMP_GROUP1_ACK_AABB01 = "55C9D0555A1C9CED5922"
SMP_GROUP2_ACK_AABB02 = "55C9D0555A1F9CED591E"
SMP_GROUP3_ACK_AABB03 = "55C9D0555A1E9CEDD909"
SMP_GROUP4_ACK_AABB04 = "55C9D0555A199CED5966"
SMP_GROUP5_ACK_AABB05 = "55C9D0555A189CEDD971"
SMP_GROUP6_ACK_AABB06 = "55C9D0555A1B9CEDD94D"
SMP_GROUP7_ACK_AABB07 = "55C9D0555A1A9CED595A"
SMP_GROUP8_ACK_AABB08 = "55C9D0555A159CED5996"
SMP_GROUP9_ACK_AABB09 = "55C9D0555A149CEDD981"
SMP_GROUP10_ACK_AABB10 = "55C9D0555A0D9CED5876"
SMP_GROUP11_ACK_AABB11 = "55C9D0555A0C9CEDD861"
SMP_GROUP12_ACK_AABB12 = "55C9D0555A0F9CEDD85D"

SMP_GROUP1_SLEEP_AABB01 = "55C9D0555A1C9DEDDF21"
SMP_GROUP2_SLEEP_AABB02 = "55C9D0555A1F9DEDDF1D"
SMP_GROUP3_SLEEP_AABB03 = "55C9D0555A1E9DED5F0A"
SMP_GROUP4_SLEEP_AABB04 = "55C9D0555A199DEDDF65"
SMP_GROUP5_SLEEP_AABB05 = "55C9D0555A189DED5F72"
SMP_GROUP6_SLEEP_AABB06 = "55C9D0555A1B9DED5F4E"
SMP_GROUP7_SLEEP_AABB07 = "55C9D0555A1A9DEDDF59"
SMP_GROUP8_SLEEP_AABB08 = "55C9D0555A159DEDDF951"
SMP_GROUP9_SLEEP_AABB09 = "55C9D0555A149DED5F82"
SMP_GROUP10_SLEEP_AABB10 = "55C9D0555A0D9DEDDE75"
SMP_GROUP11_SLEEP_AABB11 = "55C9D0555A0C9DED5E62"
SMP_GROUP12_SLEEP_AABB12 = "55C9D0555A0F9DED5E5E"

SMP_GROUP2_REPORT_AABB02 = "55C9D0555A1F9EEDD51D"
SMP_GROUP6_REPORT_AABB06 = "55C9D0555A1B9EED554E"
                           

SMP_GROUP3_SLEEP_REPORT_AABB03 = "552C9D0555A1E9DED2F8827EE7874B6"
SMP_GROUP3_SLEEP_REPORT_CHECKPOINT_AABB03 = "552C9D0555A1E9DED2F8827EF787882739355815E"

THREE_MSG_AABB12_BUFFER =           METAPREAMBLE + TRANSITION_BYTES + NIP_THREE_MSGS +                  TRANSITION_BYTES + SMP__THREE_MSG_AABB12 + TRANSITION_BYTES + SIP_ID_AA01_01
ONE_MSG_AABB12_BUFFER =             METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP6 +              TRANSITION_BYTES + SMP__ONE_MSG_AABB12 + TRANSITION_BYTES + SIP_ID_AA01_01
THREE_MSG_AABB06_BUFFER =           METAPREAMBLE + TRANSITION_BYTES + NIP_THREE_MSGS +                  TRANSITION_BYTES + SMP_THREE_MSG_AABB06 + TRANSITION_BYTES + SIP_ID_AA01_01

NIP_ZERO_MSG_BUFFER =  METAPREAMBLE + TRANSITION_BYTES + NIP_ZERO_MSG + TRANSITION_BYTES + SIP_ID_AA01_01
DEFAULT_BUFFER = METAPREAMBLE +TRANSITION_BYTES+"55D0C9AAB4486F11"+TRANSITION_BYTES +"55C9D0555A1C9DEDDF2155C9D0555A1F9DEDDF1D55C9D0555A1E9DED5F0A55C9D0555A199DEDDF6555C9D0555A189DED5F7255C9D0555A1B9DED5F4E55C9D0555A1A9DEDDF5955C9D0555A159DEDDF9555C9D0555A149DED5F8255C9D0555A179DED5FBE55C9D0555A169DEDDFA955C9D0555A119DED5FC6" + TRANSITION_BYTES + SIP_ID_AA01_01


# SLEEP UNIT AABB06
ONE_MSG_AABB06_BUFFER_SLEEP =       METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP6 +              TRANSITION_BYTES + SMP_GROUP6_SLEEP_AABB06 + TRANSITION_BYTES + SIP_ID_AA01_01

# ACTIVATE UNIT AABB06
ONE_MSG_AABB06_BUFFER_ACK =         METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP6 +              TRANSITION_BYTES + SMP_GROUP6_ACK_AABB06 + TRANSITION_BYTES + SIP_ID_AA01_01

# REPORT REQUEST UNIT AABB06
ONE_MSG_AABB06_BUFFER_REPORT =      METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP6 +              TRANSITION_BYTES + SMP_GROUP6_REPORT_AABB06 + TRANSITION_BYTES + SIP_ID_AA01_01


# SLEEP UNIT AABB02
ONE_MSG_AABB02_BUFFER_SLEEP =       METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP2 +              TRANSITION_BYTES + SMP_GROUP2_SLEEP_AABB02 + TRANSITION_BYTES + SIP_ID_AA01_01

# ACTIVATE UNIT AABB02
ONE_MSG_AABB02_BUFFER_ACK =         METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP2 +              TRANSITION_BYTES + SMP_GROUP2_ACK_AABB02 + TRANSITION_BYTES + SIP_ID_AA01_01

# REPORT UNIT AABB02
ONE_MSG_AABB02_BUFFER_REPORT =         METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP2 +              TRANSITION_BYTES + SMP_GROUP2_REPORT_AABB02 + TRANSITION_BYTES + SIP_ID_AA01_01

# SLEEP UNIT AABB03
ONE_MSG_AABB03_BUFFER_SLEEP =       METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP3 +              TRANSITION_BYTES + SMP_GROUP3_SLEEP_AABB03 + TRANSITION_BYTES + SIP_ID_AA01_01

# ACTIVATE UNIT AABB03
ONE_MSG_AABB03_BUFFER_ACK =         METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP3 +              TRANSITION_BYTES + SMP_GROUP3_ACK_AABB03 + TRANSITION_BYTES + SIP_ID_AA01_01

# ACTIVATE & REPORT UNIT AABB03
TWO_MSG_AABB03_ACK_REPORT =         METAPREAMBLE + TRANSITION_BYTES + NIP_TWO_MSG_GROUP3 +              TRANSITION_BYTES + SMP_ACK_REPORT_MSG_AABB03 + TRANSITION_BYTES + SIP_ID_AA01_01

# SLEEP & REPORT UNIT AABB03
TWO_MSG_AABB03_SLEEP_REPORT =         METAPREAMBLE + TRANSITION_BYTES + NIP_TWO_MSG_GROUP3 +              TRANSITION_BYTES + SMP_SLEEP_REPORT_MSG_AABB03 + TRANSITION_BYTES + SIP_ID_AA01_01

# SLEEP, REPORT & CHECKPOINT UNIT AABB03
THREE_MSG_AABB03_SLEEP_REPORT_CHECKPOINT =METAPREAMBLE + TRANSITION_BYTES + NIP_THREE_MSG_GROUP3 +       TRANSITION_BYTES + SMP_SLEEP_REPORT_CHECKPOINT_MSG_AABB03 + TRANSITION_BYTES + SIP_ID_AA01_01


# ONE ACK MSG PER GROUP
ONE_ACK_MSG_PER_GROUP_BUFFER =      METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_PER_GROUP +           TRANSITION_BYTES + SMP_GROUP1_ACK_AABB01 + SMP_GROUP2_ACK_AABB02 + SMP_GROUP3_ACK_AABB03 + SMP_GROUP4_ACK_AABB04 + SMP_GROUP5_ACK_AABB05 + SMP_GROUP6_ACK_AABB06 + SMP_GROUP7_ACK_AABB07 + SMP_GROUP8_ACK_AABB08 + SMP_GROUP9_ACK_AABB09 + SMP_GROUP10_ACK_AABB10 + SMP_GROUP11_ACK_AABB11 + SMP_GROUP12_ACK_AABB12 + TRANSITION_BYTES + SIP_ID_AA01_01

# ONE SLEEP MSG PER GROUP
ONE_SLEEP_MSG_PER_GROUP_BUFFER =    METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_PER_GROUP +           TRANSITION_BYTES + SMP_GROUP1_SLEEP_AABB01 + SMP_GROUP2_SLEEP_AABB02 + SMP_GROUP3_SLEEP_AABB03 + SMP_GROUP4_SLEEP_AABB04 + SMP_GROUP5_SLEEP_AABB05 + SMP_GROUP6_SLEEP_AABB06 + SMP_GROUP7_SLEEP_AABB07 + SMP_GROUP8_SLEEP_AABB08 + SMP_GROUP9_SLEEP_AABB09 + SMP_GROUP10_SLEEP_AABB10 + SMP_GROUP11_SLEEP_AABB11 + SMP_GROUP12_SLEEP_AABB12 + TRANSITION_BYTES + SIP_ID_AA01_01

#BUFFER, 3 MESSAGES, 1 ACK AABB05, 2 ACK AABB06, 3 ACK AABB07
THREE_MSG_ADJACENT_UNITS_BUFFER =   METAPREAMBLE + TRANSITION_BYTES + NIP_THREE_MSG_ADJACENT_UNITS +    TRANSITION_BYTES + SMP_GROUP5_ACK_AABB05 + SMP_GROUP6_ACK_AABB06 + SMP_GROUP7_ACK_AABB07  + TRANSITION_BYTES + SIP_ID_AA01_01

# ONE CMD GROUP 1,2 AND 2 CMD GROUP 3. 
ONE_CMD_GROUP1AND2_TWO_CMD_GROUP3 = METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP1_2_TWO_MSG_GROUP3 + TRANSITION_BYTES +SMP_GROUP1_SLEEP_AABB01+SMP_GROUP2_SLEEP_AABB02+SMP_GROUP3_SLEEP_REPORT_AABB03+ TRANSITION_BYTES + SIP_ID_AA01_01


# ONE CMD GROUP 1,2 AND 3 CMD GROUP 3. 
ONE_CMD_GROUP1AND2_THREE_CMD_GROUP3 = METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP1_2_THREE_MSG_GROUP3 + TRANSITION_BYTES +SMP_GROUP1_SLEEP_AABB01+SMP_GROUP2_SLEEP_AABB02+SMP_GROUP3_SLEEP_REPORT_CHECKPOINT_AABB03+ TRANSITION_BYTES + SIP_ID_AA01_01

# BUFFER NO SYNC
ONE_MSG_AABB06_BUFFER_NO_SYNC = METAPREAMBLE_NO_SYNC + TRANSITION_BYTES + NIP_ONE_MSG_GROUP6_NO_SYNC +TRANSITION_BYTES + SMP_GROUP6_SLEEP_AABB06 + TRANSITION_BYTES + SIP_ID_AA01_01


# WRONG CRC BUFFERS

# ESCENARIO 1: 3 messages for other unit of the same group.
    # Seq 1: NIP CRC corrupto.
NIP_THREE_MSGS_CRC = "55D0C9FFD11DB4E1"
THREE_MSG_AABB12_BUFFER_CRC_NIP = METAPREAMBLE + TRANSITION_BYTES + NIP_THREE_MSGS_CRC + TRANSITION_BYTES + SMP__THREE_MSG_AABB12 + TRANSITION_BYTES + SIP_ID_AA01_01

    # Seq 2: SMP CRC corrupto.
SMP__THREE_MSG_AABB12_CRC = "55C9D0555A0F9DED2F8836EF78788262935797F1"
THREE_MSG_AABB12_BUFFER_CRC_SMP = METAPREAMBLE + TRANSITION_BYTES + NIP_THREE_MSGS + TRANSITION_BYTES + SMP__THREE_MSG_AABB12_CRC + TRANSITION_BYTES + SIP_ID_AA01_01

    # Seq 3: SIP CRC corrupto.
SIP_ID_AA01_01_CRC = "55B09355501C3AE1"
THREE_MSG_AABB12_BUFFER_CRC_SIP = METAPREAMBLE + TRANSITION_BYTES + NIP_THREE_MSGS + TRANSITION_BYTES + SMP__THREE_MSG_AABB12 + TRANSITION_BYTES + SIP_ID_AA01_01_CRC

# ESCENARIO 2: No messages
    # Seq 1: NIP CRC corrupto.
NIP_ZERO_MSG_CRC = "55D0C9FFE11D14E1"
NIP_ZERO_MSG_BUFFER_CRC_NIP =  METAPREAMBLE + TRANSITION_BYTES + NIP_ZERO_MSG_CRC + TRANSITION_BYTES + SIP_ID_AA01_01

    # Seq 2: SIP CRC corrupto.
NIP_ZERO_MSG_BUFFER_CRC_SIP =  METAPREAMBLE + TRANSITION_BYTES + NIP_ZERO_MSG + TRANSITION_BYTES + SIP_ID_AA01_01_CRC

# ESCENARIO 3: 1 mensaje para otra unidad del mismo grupo
    # Seq 1: NIP CRC corrupto.
NIP_ONE_MSG_GROUP6_CRC= "55D0C9FFF11DF4E1"
ONE_MSG_AABB12_BUFFER_CRC_NIP = METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP6_CRC + TRANSITION_BYTES + SMP__ONE_MSG_AABB12 + TRANSITION_BYTES + SIP_ID_AA01_01

    # Seq 2: SMP CRC corrupto.
SMP_ONE_MSG_AABB12_CRC = "55C9D0555A0F9DED5E51" 
ONE_MSG_AABB12_BUFFER_CRC_SMP = METAPREAMBLE + TRANSITION_BYTES + NIP_ONE_MSG_GROUP6 + TRANSITION_BYTES + SMP_ONE_MSG_AABB12_CRC + TRANSITION_BYTES + SIP_ID_AA01_01    
    # Seq 3: SIP CRC corrupto.

INSTALLATION_REPORT_BUFFER_123123 = "00000000FA300D0C08A91C604502FFFE311884744FFFFF"
INSTALLATION_GOTONORMAL_BUFFER_123123 = "00000000FA300D0C08A91C604502FFFE4108C423E27FFF"
INSTALLATION_BBATRESET_BUFFER_123123 = "00000000FA300D0C08A91C604502FFFE0546046188C4A3637FFF"

INSTALLATION_REPORT_BUFFER_AABB06 = "00000000FA300D0C08A918C14402FFFF495D80C54FFFFF"
INSTALLATION_GOTONORMAL_BUFFER_AABB06 = "00000000FA300D0C08A918C14402FFFE4ACAEC066A7FFF"
INSTALLATION_BBATRESET_BUFFER_AABB06 =  "00000000FA300D0C08A91C604502FFFE0546046A4AEC86A87FFF"			

RANDOM_BUFFER = "2145651136199489352108851839642767022228727101451370762879883154181679146584806607472236580147307322955904520658195756893998722110131563446250241222241674502287383828276622155538244251488365154149614497220766002659543372987741915756450983617686513949264727856051465407601542564995366603671564358050287170509337357684922819359428298305939933048317698781285528266983209953075698819189561990940269523613902545335967451531261757591494714270324638071849688649650383833849628656059918219017271143048732123415980452898265600177479367875057595262126502706519"

def tower_set_predefined_buffer_ACK(): 
    assert(TowerDevice.ExecuteAndCheck("Kr\n", f'{ACK_CONTROL_ANS}\r\n'))
    assert(TowerDevice.ExecuteAndCheck("Dr\n", f'{DEFINED_BUFFER_ANS}\r\n'))
    assert(TowerDevice.ExecuteAndCheck("Hr\n", f'{THREAD_CONTROL_ANS}\r\n'))

def tower_set_predefined_buffer(): 
    assert(TowerDevice.ExecuteAndCheck("Dr\n", f'{DEFINED_BUFFER_ANS}\r\n'))
    assert(TowerDevice.ExecuteAndCheck("Hr\n", f'{THREAD_CONTROL_ANS}\r\n'))

def tower_set_buffer(tx_buffer):
    index = 0
    buffer_len=252
    assert(TowerDevice.ExecuteAndCheck("Fc"+tx_buffer[index:buffer_len]+"\n",f'{MANAGE_BUFFER_ANS}\r\n'))
    for index in range(buffer_len,len(tx_buffer),buffer_len):
        assert(TowerDevice.ExecuteAndCheck("Ft"+tx_buffer[index:index+buffer_len]+"\n",f'{MANAGE_BUFFER_ANS}\r\n'))   
    assert(TowerDevice.ExecuteAndCheck("Hr\n", f'{THREAD_CONTROL_ANS}\r\n'))
    assert(TowerDevice.ExecuteAndCheck("Wa00\n", f'{SLD2_TWEAKING_ANS}\r\n'))

def set_TowerMask(towersMask):
    assert(TowerDevice.ExecuteAndCheck("Yt"+towersMask+"\n",f'{TOWERS_MASK_ANS}\r\n'))

def tower_set_installation_buffer(tx_buffer):
    index = 0
    buffer_len=252
    assert(TowerDevice.ExecuteAndCheck("Fc"+tx_buffer[index:buffer_len]+"\n",f'{MANAGE_BUFFER_ANS}\r\n'))
    assert(TowerDevice.ExecuteAndCheck("Hr\n", f'{THREAD_CONTROL_ANS}\r\n'))
    assert(TowerDevice.ExecuteAndCheck("Ma00\n", f'{SLD1_TWEAKING_ANS}\r\n'))

######################## TESTS STARTS HERE ########################
class TestClassCommands:

    @classmethod # constructor
    def setup_class(cls):
        global TowerDevice
        TowerDevice = Sld2SerialPort1(TOWER_PORT)
        TowerDevice.open()

        # global SLD2Device
        # SLD2Device = Sld2SerialPort2(SLD2_PORT)
        # SLD2Device.open()

    @classmethod #destructor
    def teardown_class(cls):
        TowerDevice.close_dev()
        # SLD2Device.close_dev()
    
    def test_synchronized_with_msg(self):
        tower_set_buffer(DEFAULT_BUFFER)
        assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D08")
        assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D09")
        assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D0A")
        assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D0B")
        assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D04")
    
    def test_synchronized_no_msg(self):
        tower_set_buffer(NIP_ZERO_MSG_BUFFER)
        # assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D08")
        # assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D09")
        # assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D0B")
        # assert(SLD2Device.read_binary().decode("utf-8")[0:3] == "D04")

    def test_sync_lost(self):
        assert(TowerDevice.ExecuteAndCheck("Hs\n", f'{THREAD_CONTROL_ANS}\r\n'))
    
    def test_synchronized_with_msg_ACK(self):
        tower_set_predefined_buffer_ACK()

    def test_stop_tower(self):
        assert(TowerDevice.ExecuteAndCheck("Hs\n", f'{THREAD_CONTROL_ANS}\r\n'))

######################## TOWERS ########################
    def test_One_Tower(self):
        set_TowerMask("01")

    def test_One_Tower_in_Between(self):
        set_TowerMask("55")

    def test_Random_Towers(self):
        set_TowerMask("5D")

    def test_All_Towers(self):
        set_TowerMask("FF")

######################## SCENARIOS ########################

    def test_Scenario1(self):
        tower_set_buffer(THREE_MSG_AABB12_BUFFER)

    def test_Scenario2(self):
        tower_set_buffer(NIP_ZERO_MSG_BUFFER)

    def test_Scenario3(self):
        tower_set_buffer(ONE_MSG_AABB12_BUFFER)

    def test_Scenario4(self):
        tower_set_buffer(ONE_MSG_AABB03_BUFFER_SLEEP)

    def test_Scenario5(self):
        tower_set_buffer(ONE_MSG_AABB06_BUFFER_ACK)

    def test_Scenario13(self):
        tower_set_buffer(ONE_MSG_AABB02_BUFFER_REPORT)    

    def test_Scenario6(self):
        tower_set_buffer(ONE_ACK_MSG_PER_GROUP_BUFFER)

    def test_Scenario7(self):
        tower_set_buffer(ONE_SLEEP_MSG_PER_GROUP_BUFFER)

    def test_Scenario8(self):
        tower_set_buffer(THREE_MSG_ADJACENT_UNITS_BUFFER)

    def test_Scenario9(self):
        tower_set_buffer(THREE_MSG_AABB03_SLEEP_REPORT_CHECKPOINT)

    def test_Scenario10(self):
        tower_set_buffer(ONE_CMD_GROUP1AND2_TWO_CMD_GROUP3)

    def test_Scenario11(self):
        tower_set_buffer(ONE_MSG_AABB06_BUFFER_NO_SYNC)

    def test_Scenario12(self):
        tower_set_buffer(RANDOM_BUFFER)
    
    def test_InstallationMode_Report(self):
        tower_set_installation_buffer(INSTALLATION_REPORT_BUFFER_AABB06)

    def test_InstallationMode_GoToNormal(self):
        tower_set_installation_buffer(INSTALLATION_GOTONORMAL_BUFFER_AABB06)

    def test_InstallationMode_BBATReset(self):
        tower_set_installation_buffer(INSTALLATION_BBATRESET_BUFFER_123123)
        

######################## CRC CORRUPTOS ########################
    # ESCENARIO 1: 3 messages for other unit of the same group.

    def test_Scenario1_Seq1(self):
        tower_set_buffer(THREE_MSG_AABB12_BUFFER_CRC_NIP)

    def test_Scenario1_Seq2(self):
        tower_set_buffer(THREE_MSG_AABB12_BUFFER_CRC_SMP)

    def test_Scenario1_Seq3(self):
        tower_set_buffer(THREE_MSG_AABB12_BUFFER_CRC_SIP)

    # ESCENARIO 2: No Messages.

    def test_Scenario2_Seq1(self):
        tower_set_buffer(NIP_ZERO_MSG_BUFFER_CRC_NIP)

    def test_Scenario2_Seq2(self):
        tower_set_buffer(NIP_ZERO_MSG_BUFFER_CRC_SIP)

    # ESCENARIO 3: No Messages.

    def test_Scenario3_Seq1(self):
        tower_set_buffer(ONE_MSG_AABB12_BUFFER)

